version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5454:5432"
    networks:
      - backend

  strapi:
    build:
      context: ./cms
      dockerfile: Dockerfile
    container_name: strapi
    environment:
      HOST: ${STRAPI_HOST}
      PORT: ${STRAPI_PORT}
      APP_KEYS: ${STRAPI_APP_KEYS}
      API_TOKEN_SALT: ${STRAPI_API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${STRAPI_ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${STRAPI_TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${STRAPI_JWT_SECRET}
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_HOST: ${MEILI_HOST}
    volumes:
      - strapi_data:/usr/src/app
    ports:
      - "1337:1337"
    depends_on:
      - postgres
    networks:
      - backend

  meilisearch:
    image: getmeili/meilisearch
    container_name: meilisearch
    environment:
      MEILI_NO_ANALYTICS: "true"
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
    volumes:
      - meili_data:/meili_data
    ports:
      - "7700:7700"
    networks:
      - backend

  sveltekit:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: sveltekit
    environment:
      PUBLIC_CMS_BASE_URL: ${SVELTE_CMS_BASE_URL}
      PUBLIC_SEARCH_BASE_URL: ${SVELTE_SEARCH_BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      - strapi
      - meilisearch
    networks:
      - backend

volumes:
  postgres_data:
  strapi_data:
  meili_data:

networks:
  backend:
    driver: bridge
